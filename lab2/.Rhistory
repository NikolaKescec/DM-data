library(twitteR)
library(tidyverse)
library(tm)
#--------------------------------------------------------------------------------
rm(list=ls())
getwd()
setwd("~/R_analysis/DRUME_Twitter")
setup_twitter_oauth(consumer_key = '7W5N0kBbDkcX1UDudiqTATTuI',
consumer_secret = 'Fo7AZMYSCODrIoy7fRp71L5ve6ggWUmEDbvw8FPrcimwbxXa9F',
access_token ='2380909746-JnT4iRgnX0wPVVBotzEuftc3oxVlbrctjmfbrCQ',
access_secret ='oqnzH2VLdm8QNpQLfM4E8CFLWfGdFdD7vZp4cypilu4yq')
rm(list=ls())
getwd()
setwd("E:\FER\Diplomski\1-seminar\DM\Laboratorijske vjezbe\lab2")
setup_twitter_oauth(consumer_key = '7W5N0kBbDkcX1UDudiqTATTuI',
consumer_secret = 'Fo7AZMYSCODrIoy7fRp71L5ve6ggWUmEDbvw8FPrcimwbxXa9F',
access_token ='2380909746-JnT4iRgnX0wPVVBotzEuftc3oxVlbrctjmfbrCQ',
access_secret ='oqnzH2VLdm8QNpQLfM4E8CFLWfGdFdD7vZp4cypilu4yq')
user <- getUser("@coe")
tweets <- userTimeline(user, n = 200)
rm(list=ls())
getwd()
setwd("E:/FER/Diplomski/1-seminar/DM/Laboratorijske vjezbe/lab2")
setup_twitter_oauth(consumer_key = '7W5N0kBbDkcX1UDudiqTATTuI',
consumer_secret = 'Fo7AZMYSCODrIoy7fRp71L5ve6ggWUmEDbvw8FPrcimwbxXa9F',
access_token ='2380909746-JnT4iRgnX0wPVVBotzEuftc3oxVlbrctjmfbrCQ',
access_secret ='oqnzH2VLdm8QNpQLfM4E8CFLWfGdFdD7vZp4cypilu4yq')
user <- getUser("@coe")
tweets <- userTimeline(user, n = 200)
tweets_data <- twListToDF(tweets)
tweets_data$text <- sapply(tweets_data$text,function(row) iconv(row, "latin1", "ASCII", sub="")) # ty FER2.net
#build a corpus and specify the source to be character of vectors
#a corpus is a collection of written texts
myCorpus <- Corpus(VectorSource(tweets_data$text))
myCorpus <- tm_map(myCorpus, function(x) iconv(enc2utf8(x), sub = "byte"))
removeURL <- function(x) gsub("http[[:alnum:]]*", "", x)
myCorpus <- tm_map(myCorpus, removeURL)
removeURL2 <- function(x) gsub("https[[:alnum:]]*", "", x)
myCorpus <- tm_map(myCorpus, removeURL2)
#convert myCorpus into lowercase
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
#remove punctuation
myCorpus <- tm_map(myCorpus, removePunctuation)
#remove numbers
myCorpus <- tm_map(myCorpus, removeNumbers)
Textprocessing <- function(x)
{gsub("http[[:alnum:]]*",'', x)
gsub('http\\S+\\s*', '', x) ## Remove URLs
gsub('\\b+RT', '', x) ## Remove RT
gsub('#\\S+', '', x) ## Remove Hashtags
gsub('@\\S+', '', x) ## Remove Mentions
gsub('[[:cntrl:]]', '', x) ## Remove Controls and special characters
gsub("\\d", '', x) ## Remove Controls and special characters
gsub('[[:punct:]]', '', x) ## Remove Punctuations
gsub("^[[:space:]]*","",x) ## Remove leading whitespaces
gsub("[[:space:]]*$","",x) ## Remove trailing whitespaces
gsub(' +',' ',x) ## Remove extra whitespaces
gsub("^ ", "", x) # Remove blank spaces at the beginning
gsub(" $", "", x) # Remove blank spaces at the end
}
myCorpus <- tm_map(myCorpus,Textprocessing)
# remove extra whitespace
myCorpus <- tm_map(myCorpus, stripWhitespace)
# remove stop words
myCorpus <- tm_map(myCorpus, removeWords, stopwords("english"))
library(wordcloud)
wordcloud(myCorpus,min.freq = 5,colors=brewer.pal(8, "Dark2"),random.color = TRUE,max.words = 500)
# generiranje matrice
tdm <- TermDocumentMatrix(myCorpus)
termDocMatrix <- as.matrix(tdm)
termDocMatrix_sentiment <- termDocMatrix
termDocMatrix [termDocMatrix >=1] <- 1
termMatrix <- termDocMatrix %*% t(termDocMatrix)
termMatrixDF <- as.data.frame(termMatrix)
write.csv2(termMatrixDF, "termMatrix.csv", quote=FALSE)
# An Sentiment analiza
library(tidytext)
str(termDocMatrix_sentiment)
freq <- rowSums(as.matrix(termDocMatrix_sentiment))
freq <- as.data.frame(freq)
freq$word <- rownames(freq)
freq <- freq %>% arrange(desc(freq))
nrc_sentiment <- get_sentiments("nrc")
sentiment_val <- freq %>% inner_join(nrc_sentiment, by =c('word'))
#--------------------------------------------------------------------------------
# general wording sentiment
sent1 <- sentiment_val %>% count(sentiment, sort = TRUE)
# frequency wording sentiment
sent2 <- sentiment_val %>% group_by(sentiment) %>%
summarise(total_freq = sum(freq))%>% arrange(desc(total_freq))
#--------------------------------------------------------------------------------
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
nrc_sentiment <- get_sentiments("nrc")
library(tidytext)
(termDocMatrix_sentiment)
nrc_sentiment <- get_sentiments("nrc")
# An Sentiment analiza
library(tidytext)
str(termDocMatrix_sentiment)
freq <- rowSums(as.matrix(termDocMatrix_sentiment))
freq <- as.data.frame(freq)
freq$word <- rownames(freq)
freq <- freq %>% arrange(desc(freq))
nrc_sentiment <- get_sentiments("nrc")
sentiment_val <- freq %>% inner_join(nrc_sentiment, by =c('word'))
textdata: install.packages("textdata")
textdata: install.packages("nrc")
install.packages("nrc")
install.packages("textdata")
# An Sentiment analiza
library(tidytext)
str(termDocMatrix_sentiment)
freq <- rowSums(as.matrix(termDocMatrix_sentiment))
freq <- as.data.frame(freq)
freq$word <- rownames(freq)
freq <- freq %>% arrange(desc(freq))
nrc_sentiment <- get_sentiments("nrc")
# An Sentiment analiza
library(tidytext)
str(termDocMatrix_sentiment)
freq <- rowSums(as.matrix(termDocMatrix_sentiment))
freq <- as.data.frame(freq)
freq$word <- rownames(freq)
freq <- freq %>% arrange(desc(freq))
nrc_sentiment <- get_sentiments("nrc")
sentiment_val <- freq %>% inner_join(nrc_sentiment, by =c('word'))
# general wording sentiment
sent1 <- sentiment_val %>% count(sentiment, sort = TRUE)
# frequency wording sentiment
sent2 <- sentiment_val %>% group_by(sentiment) %>%
summarise(total_freq = sum(freq))%>% arrange(desc(total_freq))
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
# An Sentiment analiza
library(tidytext)
str(termDocMatrix_sentiment)
freq <- rowSums(as.matrix(termDocMatrix_sentiment))
freq <- as.data.frame(freq)
freq$word <- rownames(freq)
freq <- freq %>% arrange(desc(freq))
nrc_sentiment <- get_sentiments("nrc")
sentiment_val <- freq %>% inner_join(nrc_sentiment, by =c('word'))
#--------------------------------------------------------------------------------
# general wording sentiment
sent1 <- sentiment_val %>% count(sentiment, sort = TRUE)
# frequency wording sentiment
sent2 <- sentiment_val %>% group_by(sentiment) %>%
summarise(total_freq = sum(freq))%>% arrange(desc(total_freq))
#--------------------------------------------------------------------------------
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
View(sentiment_val)
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
# An Sentiment analiza
library(tidytext)
library(tm)
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
library(twitteR)
library(tidyverse)
library(tm)
ggplot(sent1, aes(x = reorder(sentiment, -n, sum), y = n, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
ggplot(sent2, aes(x = reorder(sentiment, -total_freq, sum), y = total_freq, fill = sentiment))  + geom_col() + theme_bw() +
labs( x = 'Sentiment category', y = 'Value', title = 'Sentiment analysis')
View(sent1)
View(sent1)
View(sent2)
View(sentiment_val)
